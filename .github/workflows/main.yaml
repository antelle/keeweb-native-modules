name: CI
on:
  push:
    tags:
      - '*'
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install libudev-dev libpcsclite1 libpcsclite-dev
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: |
          rm -rf node_modules/usb/build/Release
          rm -rf node_modules/pcsclite/build/Release
          rm -rf node_modules/keytar/build/Release
          rm -rf node_modules/argon2/build/Release
      - name: Build
        run: npm run-script build
      - name: Upload usb artifact
        uses: actions/upload-artifact@v1
        with:
          name: usb-linux
          path: node_modules/usb/build/Release/usb_bindings.node
      - name: Upload pcsclite artifact
        uses: actions/upload-artifact@v1
        with:
          name: pcsclite-linux
          path: node_modules/pcsclite/build/Release/pcsclite.node
      - name: Upload keytar artifact
        uses: actions/upload-artifact@v1
        with:
          name: keytar-linux
          path: node_modules/keytar/build/Release/keytar.node
      - name: Upload argon2 artifact
        uses: actions/upload-artifact@v1
        with:
          name: argon2-linux
          path: node_modules/argon2/build/Release/argon2.node
  build-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install libuv
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: |
          rm -rf node_modules/usb/build/Release
          rm -rf node_modules/pcsclite/build/Release
          rm -rf node_modules/keytar/build/Release
          rm -rf node_modules/argon2/build/Release
      - name: Build
        run: npm run-script build
      - name: Upload usb artifact
        uses: actions/upload-artifact@v1
        with:
          name: usb-darwin
          path: node_modules/usb/build/Release/usb_bindings.node
      - name: Upload pcsclite artifact
        uses: actions/upload-artifact@v1
        with:
          name: pcsclite-darwin
          path: node_modules/pcsclite/build/Release/pcsclite.node
      - name: Upload keytar artifact
        uses: actions/upload-artifact@v1
        with:
          name: keytar-darwin
          path: node_modules/keytar/build/Release/keytar.node
      - name: Upload argon2 artifact
        uses: actions/upload-artifact@v1
        with:
          name: argon2-darwin
          path: node_modules/argon2/build/Release/argon2.node
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: |
          rm -r node_modules\usb\build\Release
          rm -r node_modules\pcsclite\build\Release
          rm -r node_modules\keytar\build\Release
          rm -r node_modules\argon2\lib\binding
      - name: Build
        run: npm run-script build
      - name: Upload usb artifact
        uses: actions/upload-artifact@v1
        with:
          name: usb-windows
          path: node_modules/usb/build/Release/usb_bindings.node
      - name: Upload pcsclite artifact
        uses: actions/upload-artifact@v1
        with:
          name: pcsclite-windows
          path: node_modules/pcsclite/build/Release/pcsclite.node
      - name: Upload keytar artifact
        uses: actions/upload-artifact@v1
        with:
          name: keytar-windows
          path: node_modules/keytar/build/Release/keytar.node
      - name: Upload argon2 artifact
        uses: actions/upload-artifact@v1
        with:
          name: argon2-windows
          path: node_modules/argon2/lib/binding/argon2.node
  publish:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-darwin
      - build-windows
    steps:
      - uses: actions/checkout@v2
      - name: Download usb linux build
        uses: actions/download-artifact@v1
        with:
          name: usb-linux
      - name: Download usb darwin build
        uses: actions/download-artifact@v1
        with:
          name: usb-darwin
      - name: Download usb windows build
        uses: actions/download-artifact@v1
        with:
          name: usb-windows
      - name: Download pcsclite linux build
        uses: actions/download-artifact@v1
        with:
          name: pcsclite-linux
      - name: Download pcsclite darwin build
        uses: actions/download-artifact@v1
        with:
          name: pcsclite-darwin
      - name: Download pcsclite windows build
        uses: actions/download-artifact@v1
        with:
          name: pcsclite-windows
      - name: Download keytar linux build
        uses: actions/download-artifact@v1
        with:
          name: keytar-linux
      - name: Download keytar darwin build
        uses: actions/download-artifact@v1
        with:
          name: keytar-darwin
      - name: Download keytar windows build
        uses: actions/download-artifact@v1
        with:
          name: keytar-windows
      - name: Download argon2 linux build
        uses: actions/download-artifact@v1
        with:
          name: argon2-linux
      - name: Download argon2 darwin build
        uses: actions/download-artifact@v1
        with:
          name: argon2-darwin
      - name: Download argon2 windows build
        uses: actions/download-artifact@v1
        with:
          name: argon2-windows
      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Binaries built from ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Build npm package
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          cp usb-linux/usb_bindings.node package/usb.linux.node
          cp usb-darwin/usb_bindings.node package/usb.darwin.node
          cp usb-windows/usb_bindings.node package/usb.windows.node
          cp pcsclite-linux/pcsclite.node package/pcsclite.linux.node
          cp pcsclite-darwin/pcsclite.node package/pcsclite.darwin.node
          cp pcsclite-windows/pcsclite.node package/pcsclite.windows.node
          cp keytar-linux/keytar.node package/keytar.linux.node
          cp keytar-darwin/keytar.node package/keytar.darwin.node
          cp keytar-windows/keytar.node package/keytar.windows.node
          cp argon2-linux/argon2.node package/argon2.linux.node
          cp argon2-darwin/argon2.node package/argon2.darwin.node
          cp argon2-windows/argon2.node package/argon2.windows.node
          sed -i "s/0.0.0/${GITHUB_REF/refs\/tags\//}/g" package/package.json
          npm pack ./package
          mv keeweb-keeweb-native-modules-*.tgz keeweb-native-modules.tgz
      - name: Publish npm package
        run: |
          rm -f ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > ~/.npmrc
          npm publish package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload npm package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: keeweb-native-modules.tgz
          asset_name: keeweb-native-modules.tgz
          asset_content_type: application/octet-stream
