name: CI
on:
  push:
    tags:
      - '*'
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install libudev-dev
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: rm -rf node_modules/usb/build/Release
      - name: Build
        run: npm run-script build
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: usb-linux
          path: node_modules/usb/build/Release/usb_bindings.node
  build-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install libuv
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: rm -rf node_modules/usb/build/Release
      - name: Build
        run: npm run-script build
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: usb-darwin
          path: node_modules/usb/build/Release/usb_bindings.node
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM install
        run: npm i --no-fund
      - name: Cleanup
        run: rm -r node_modules\usb\build\Release
      - name: Build
        run: npm run-script build
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: usb-windows
          path: node_modules/usb/build/Release/usb_bindings.node
  publish:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-darwin
      - build-windows
    steps:
      - uses: actions/checkout@v2
      - name: Download usb linux build
        uses: actions/download-artifact@v1
        with:
          name: usb-linux
      - name: Download usb darwin build
        uses: actions/download-artifact@v1
        with:
          name: usb-darwin
      - name: Download usb windows build
        uses: actions/download-artifact@v1
        with:
          name: usb-windows
      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Binaries built from ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Upload usb linux build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: usb-linux/usb_bindings.node
          asset_name: usb_bindings.linux.node
          asset_content_type: application/octet-stream
      - name: Upload usb darwin build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: usb-darwin/usb_bindings.node
          asset_name: usb_bindings.darwin.node
          asset_content_type: application/octet-stream
      - name: Upload usb windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: usb-windows/usb_bindings.node
          asset_name: usb_bindings.windows.node
          asset_content_type: application/octet-stream
      - name: NPM publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp usb-linux/usb_bindings.node package/usb_bindings.linux.node
          cp usb-darwin/usb_bindings.node package/usb_bindings.darwin.node
          cp usb-windows/usb_bindings.node package/usb_bindings.windows.node
          sed -i "s/0.0.0/${{ github.ref }}/g" package/package.json
          cat package/package.json
          rm -f ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > ~/.npmrc
          npm publish --dry-run package
